{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "OpenStack Identity API v3 (Domain)",
    "version" : "3.0",
    "title" : "OpenStack Identity API v3 (Domain)",
    "contact" : {
      "email" : "szfugui@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "developers",
    "description" : "Operations available to regular developers"
  } ],
  "servers" : [ {
    "description" : "Huawei Cloud IAM Service",
    "url" : "https://iam.myhuaweicloud.com/v3"
  } ],
  "paths" : {
    "/domains" : {
      "get" : {
        "operationId" : "getDomains",
        "summary" : "Lists all domains",
        "parameters" : [ {
          "in" : "query",
          "name" : "name",
          "description" : "Filters the response by a domain name",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "enabled",
          "description" : "If set to true, then only domains that are enabled will be returned, if set to false only that are disabled will be returned. Any value other than 0, including no value, will be interpreted as true.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Domains"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "401" : {
            "$ref" : "#/components/responses/401"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          },
          "404" : {
            "$ref" : "#/components/responses/404"
          },
          "405" : {
            "$ref" : "#/components/responses/405"
          },
          "413" : {
            "$ref" : "#/components/responses/413"
          },
          "503" : {
            "$ref" : "#/components/responses/503"
          }
        }
      },
      "post" : {
        "summary" : "Create domain",
        "operationId" : "addDomain",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "domain" : {
                    "$ref" : "#/components/schemas/DomainItemCreate"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "$ref" : "#/components/responses/201"
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "401" : {
            "$ref" : "#/components/responses/401"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          },
          "404" : {
            "$ref" : "#/components/responses/404"
          },
          "405" : {
            "$ref" : "#/components/responses/405"
          },
          "409" : {
            "$ref" : "#/components/responses/409"
          },
          "413" : {
            "$ref" : "#/components/responses/413"
          },
          "415" : {
            "$ref" : "#/components/responses/415"
          },
          "503" : {
            "$ref" : "#/components/responses/503"
          }
        }
      }
    },
    "/domains/{domain_id}" : {
      "get" : {
        "operationId" : "getDomain",
        "summary" : "Show domain details",
        "parameters" : [ {
          "in" : "path",
          "name" : "domain_id",
          "description" : "The domain ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request was successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainObject"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "401" : {
            "$ref" : "#/components/responses/401"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          },
          "404" : {
            "$ref" : "#/components/responses/404"
          },
          "405" : {
            "$ref" : "#/components/responses/405"
          },
          "413" : {
            "$ref" : "#/components/responses/413"
          },
          "503" : {
            "$ref" : "#/components/responses/503"
          }
        }
      },
      "patch" : {
        "operationId" : "updateDomain",
        "summary" : "Update domain",
        "parameters" : [ {
          "in" : "path",
          "name" : "domain_id",
          "description" : "The domain ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "domain" : {
                    "$ref" : "#/components/schemas/DomainItemCreate"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Request was successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DomainObject"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/400"
          },
          "401" : {
            "$ref" : "#/components/responses/401"
          },
          "403" : {
            "$ref" : "#/components/responses/403"
          },
          "404" : {
            "$ref" : "#/components/responses/404"
          },
          "405" : {
            "$ref" : "#/components/responses/405"
          },
          "409" : {
            "$ref" : "#/components/responses/409"
          },
          "413" : {
            "$ref" : "#/components/responses/413"
          },
          "415" : {
            "$ref" : "#/components/responses/415"
          },
          "503" : {
            "$ref" : "#/components/responses/503"
          }
        }
      }
    }
  },
  "components" : {
    "responses" : {
      "201" : {
        "description" : "Resource was created and is ready to use"
      },
      "400" : {
        "description" : "Some content in the request was invalid",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorRepsonse"
            }
          }
        }
      },
      "401" : {
        "description" : "User must authenticate before making a request",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorRepsonse"
            }
          }
        }
      },
      "403" : {
        "description" : "Policy does not allow current user to do this operation",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorRepsonse"
            }
          }
        }
      },
      "404" : {
        "description" : "The requested resource could not be found",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorRepsonse"
            }
          }
        }
      },
      "405" : {
        "description" : "Method is not valid for this endpoint",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorRepsonse"
            }
          }
        }
      },
      "409" : {
        "description" : "This operation conflicted with another operation on this resource",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorRepsonse"
            }
          }
        }
      },
      "413" : {
        "description" : "The request is larger than the server is willing or able to process",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorRepsonse"
            }
          }
        }
      },
      "415" : {
        "description" : "The request entity has a media type which the server or resource does not support",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorRepsonse"
            }
          }
        }
      },
      "503" : {
        "description" : "Service is not available. This is mostly caused by service configuration errors which prevents the service from successful start up",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ErrorRepsonse"
            }
          }
        }
      }
    },
    "schemas" : {
      "Domains" : {
        "type" : "object",
        "properties" : {
          "domains" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DomainItem"
            }
          }
        }
      },
      "DomainObject" : {
        "type" : "object",
        "properties" : {
          "domain" : {
            "$ref" : "#/components/schemas/DomainItem"
          }
        }
      },
      "DomainItem" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the domain",
            "example" : "4e60c818-da53-11e9-a6c2-0255ac101ec0"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the domain",
            "example" : "china-mobile"
          },
          "enabled" : {
            "type" : "string",
            "description" : "If set to true, domain is enabled. If set to false, domain is disabled."
          },
          "links" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "The links to the domain resource."
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the domain"
          }
        }
      },
      "DomainItemCreate" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the domain",
            "example" : "china-mobile"
          },
          "enabled" : {
            "type" : "string",
            "description" : "If set to true, domain is enabled. If set to false, domain is disabled."
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the domain"
          }
        }
      },
      "ErrorRepsonse" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Error ID"
          },
          "message" : {
            "type" : "string",
            "description" : "Error message"
          }
        }
      }
    }
  }
}